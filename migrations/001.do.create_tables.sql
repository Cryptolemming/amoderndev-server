CREATE TABLE users (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  username TEXT NOT NULL,
  password VARCHAR(100) NOT NULL,
  email VARCHAR(320) NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE posts (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  title TEXT NOT NULL,
  content TEXT NOT NULL,
  comment_count SMALLINT DEFAULT 0 NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE comments (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  content VARCHAR(1000) NOT NULL,
  post_id INTEGER REFERENCES posts(id)  ON DELETE CASCADE NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE favorite_posts (
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  post_id INTEGER REFERENCES posts(id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (user_id, post_id)
);

CREATE TABLE favorite_comments (
  user_id INTEGER REFERENCES users(id)  ON DELETE CASCADE NOT NULL,
  comment_id INTEGER REFERENCES comments(id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (user_id, comment_id)
);

CREATE TABLE bookmarks (
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  post_id INTEGER REFERENCES posts(id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (user_id, post_id)
);

CREATE TABLE following (
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  follow INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (user_id, follow)
);

CREATE TABLE topics (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  title TEXT NOT NULL
);

CREATE table post_topics (
  post_id INTEGER REFERENCES posts(id) ON DELETE CASCADE NOT NULL,
  topic_id INTEGER REFERENCES topics(id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (topic_id, post_id)
);
